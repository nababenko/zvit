function showSection(section) {
    const content = document.getElementById('info');
    
    const sections = {
        topic: `
            <h2>Тема Мета Місце розташування лаб №2</h2>
            <p>Тема: КАСКАДНІ ТАБЛИЦІ СТИЛІВ. СЕЛЕКТОРИ .ІДЕНТИФІКАТОРИ. СТИЛЬОВЕ ОФОРМЛЕННЯ ТЕКСТОВИХ ЕЛЕМЕНТІВ В HTML-ДОКУМЕНТАХ.</p>
            <p>Мета: придбати практичні навички роботи  з селекторами, ідентифікаторами, списками,  різноманітними властивостями кольору і фону,  зовнішними та внутрішними  відступами,  плаваючими елементами, оформленням текстових елементів</p>
            <p>Посилання на сторінку:</p>
            <a href="https://nababenko.github.io/web_lab2/">https://nababenko.github.io/web_lab2/</a>
            <p>Посилання на GitHub:</p>
            <a href="https://github.com/nababenko/web_lab2">https://github.com/nababenko/web_lab2</a>
        `,
        methods: `
            <h2>Способи підключення стилів</h2>
            <p>Існує три основні способи підключення стилів до веб-сторінки за допомогою CSS:<br>
            
             Вбудовані стилі <br>
             Стилі задаються безпосередньо всередині HTML-тегів за допомогою атрибута style. Цей метод підходить для оформлення окремих елементів на сторінці. Проте його використання не є рекомендованим для великих проектів через проблеми з підтримкою і масштабуванням.</p>
            <img src="../resources/2m1.png">
           
            <p>Внутрішні стилі <br>
            Стилі прописуються у блоці style, що розташований всередині секції head HTML-документа. Цей підхід використовується, коли стилі потрібні для однієї окремої сторінки, але не для всієї веб-програми.</p>
            <img src="../resources/2m2.png">

            <p>Зовнішні стилі <br>
            Стилі зберігаються в окремому файлі з розширенням .css, який підключається до HTML-документа за допомогою тега link у секції head. Цей спосіб є найкращим для великих проектів, оскільки дозволяє зберігати стилі окремо від HTML-коду і використовувати один CSS-файл для кількох сторінок.</p>
            <img src="../resources/2m3.png">

           `,
        selectors: `
            <h2>СЕЛЕКТОРИ</h2>
            <p>Селектори в CSS — це механізми, за допомогою яких стилі застосовуються до певних елементів HTML. Вони визначають, до яких саме елементів на сторінці будуть застосовані правила CSS. Існує кілька типів селекторів, кожен з яких має свої особливості та застосування.</p>
            <p>Далі детальніше</p>

        `,
        tag: `
            <h2>Селектори тегу</h2>
            <p>Селектор застосовується до всіх елементів певного тегу. Наприклад, потрібно стилізувати всі абзаци p, використовується селектор тегу.</p>
            <img src="../resources/2t1.png">
            <img src="../resources/2t2.png">
            <img src="../resources/2t3.png" width="1080">
            
        `,
        classes: `
            <h2>Селектори класу</h2>
            <p>Селектори класів використовуються для застосування стилів до елементів з певним атрибутом class. Перед назвою класу використовується крапка (.).</p>
            <img src="../resources/2c1.png">
            <img src="../resources/2c2.png">
            <img src="../resources/2c3.png" width="1080">
        `,
        ids: `
            <h2>Селектори ідентифікаторів</h2>
            <p>Селектори ідентифікаторів використовуються для застосування стилів до елемента з унікальним атрибутом id. Для цього перед назвою ідентифікатора використовується символ решітки (#).</p>
            <img src="../resources/2i1.png">
            <img src="../resources/2i2.png">
            <img src="../resources/2i3.png">
            
        `,
      
        others: `
            <h2>Інші селектори</h2>
            <p>Контекстні селектори. Селектор застосовується до елементів, які є нащадками іншого елемента. Наприклад, можна стилізувати всі p, які знаходяться всередині div.</p>
            <img src="../resources/2o1.png">
            <img src="../resources/2o2.png">
            <img src="../resources/2o3.png" width="1080">   
            <p>Групові селектори. Декілька елементів можна стилізувати одним набором правил, використовуючи груповий селектор. Елементи перераховуються через кому.</p>         
            <img src="../resources/2o4.png">
            <img src="../resources/2o7.png">            
            <img src="../resources/2o6.png" width="1080">
             
        `,
        different: `
            <h2>CSS: Шрифти Текст Таблиці Фон Контур Списки CSS Просунутий</h2>
            <h3> Шрифти + Текст + Фон + Списки</h3>
            <img src="../resources/2d(3).png">
            <img src="../resources/2d(2).png">
            <img src="../resources/2d(1).png" width="1080">

            <h3>Таблиці</h3>
            <img src="../resources/2t1.png">
            <img src="../resources/2t2.png">
            <img src="../resources/2t3.png" width="1080">

            <h3>CSS Просунутий (Іконки)</h3>
            <img src="../resources/2i1.png">
            <img src="../resources/2i2.png">
            <img src="../resources/2i3.png">

            <h3>Контур</h3>
            <img src="../resources/2db (1).png">
            <img src="../resources/2db (2).png">
            <img src="../resources/2db (3).png">
            
        `,
        conclusion: `
            <h2>ВИСНОВКИ</h2>
            <p>У ході виконання лабораторної роботи я отримала практичні навички роботи з основними елементами стилізації веб-сторінок за допомогою CSS. Зокрема, я навчилася працювати з селекторами, ідентифікаторами та класами для точного вибору елементів HTML. Було досліджено використання різноманітних властивостей для оформлення кольорів та фону елементів, а також застосування зовнішніх та внутрішніх відступів (margin і padding) для налаштування розташування елементів на сторінці.<br>Ця лабораторна робота допомогла закріпити теоретичні знання та отримати практичний досвід, що є важливим для створення сучасних і стильних веб-сторінок.</p>
        `
    };

    content.innerHTML = sections[section] || 'Інформація не знайдена.';
}